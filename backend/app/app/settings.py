"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

#Environment variables
DATABASES_HOST=os.getenv('DATABASES_HOST','localhost')
DATABASES_NAME=os.getenv('DATABASES_NAME','store_clothing')
DATABASES_USER=os.getenv('DATABASES_USER','root')
DATABASES_PASSWORD=os.getenv('DATABASES_PASSWORD','root@123')
DATABASES_PORT=os.getenv('DATABASES_PORT','5432')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^(abadldyt7fwk-wa2l)-cu7-fl5%ktk+53jxpg^h_y#p+u5to'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # Thêm Django REST Framework
    'rest_framework_simplejwt',  # Thêm Simple JWT cho xác thực token
    'corsheaders',  # Thêm CORS headers
    'authentication',  # Thêm ứng dụng xác thực người dùng
    'product',
    'gen_image_ai',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DATABASES_NAME,  # Tên database
        'USER': DATABASES_USER,  # Tên người dùng PostgreSQL
        'PASSWORD': DATABASES_PASSWORD,  # Mật khẩu người dùng
        'HOST': DATABASES_HOST,  # Địa chỉ host
        'PORT': DATABASES_PORT,  # Cổng mặc định của PostgreSQL
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# settings.py

# Media files settings

import os

# Định nghĩa thư mục chứa các tệp media (hình ảnh, video, file tải lên)
MEDIA_URL = '/media/'  # URL gốc để truy cập tệp media

# Định nghĩa thư mục trên máy chủ nơi lưu trữ các tệp media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Đảm bảo thư mục này tồn tại
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # Địa chỉ frontend React
]

from datetime import timedelta
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30), # Thời gian sống của access token (30 phút)
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1), # Thời gian sống của refresh token (1 ngày)
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_HEADER_TYPES": ("Bearer",),
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

AUTH_USER_MODEL = 'authentication.User'